<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div class="entry">
   <h2><span>返回值:jQuery</span>blur(handler(eventObject))<br></h2>
   <div class="desc">
      <p>Bind an event handler to the "blur" JavaScript event, or trigger that event on an element.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>blur(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>blur(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>blur()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>This method is a shortcut for <code>.bind('blur', handler)</code> in the first variation, and <code>.trigger('blur')</code> in the second.
         </p>
         
         <p>The <code>blur</code> event is sent to an element when it loses focus. Originally, this event was only applicable to form elements, such as <code>&lt;input&gt;</code>. In recent browsers, the domain of the event has been extended to include all element types. An element can lose focus via
            keyboard commands, such as the Tab key, or by mouse clicks elsewhere on the page.
         </p>
         
         <p>For example, consider the HTML:</p>
         <pre>&lt;form&gt;
  &lt;input id="target" type="text" value="Field 1" /&gt;
  &lt;input type="text" value="Field 2" /&gt;
&lt;/form&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;
The event handler can be bound to the first input field:
$('#target').blur(function() {
  alert('Handler for .blur() called.');
});</pre>
         <p>Now if the first field has the focus and we click elsewhere, or tab away from it, the alert is displayed:</p>
         
         <p>
            <span class="output">Handler for .blur() called.</span>
            
         </p>
         
         <p>We can trigger the event when another element is clicked:</p>
         <pre>$('#other').click(function() {
  $('#target').blur();
});</pre>
         <p>After this code executes, clicks on <span class="output">Trigger the handler</span> will also alert the message.
         </p>
         
         <p>The <code>blur</code> event does not bubble in Internet Explorer. Therefore, scripts that rely on event delegation with the <code>blur</code> event will not work consistently across browsers.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>To trigger the blur event on all paragraphs:</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").blur();</code></pre></div>
</div>