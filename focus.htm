<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div class="entry">
   <h2><span>返回值:jQuery</span>focus(handler(eventObject))<br></h2>
   <div class="desc">
      <p>Bind an event handler to the "focus" JavaScript event, or trigger that event on an element.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>focus(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>focus(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>focus()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <ul>
            
            <li>This method is a shortcut for <code>.bind('focus', handler)</code> in the first variation, and <code>.trigger('focus')</code> in the second.
            </li>
            
            <li>The <code>focus</code> event is sent to an element when it gains focus. This event is implicitly applicable to a limited set of elements, such as
               form elements (<code>&lt;input&gt;</code>, <code>&lt;select&gt;</code>, etc.) and links (<code>&lt;a href&gt;</code>). In recent browser versions, the event can be extended to include all element types by explicitly setting the element's
               <code>tabindex</code> property. An element can gain focus via keyboard commands, such as the Tab key, or by mouse clicks on the element.
            </li>
            
            <li>Elements with focus are usually highlighted in some way by the browser, for example with a dotted line surrounding the element.
               The focus is used to determine which element is the first to receive keyboard-related events.
            </li>
            
         </ul>
         
         <p>For example, consider the HTML:</p>
         <pre>&lt;form&gt;
  &lt;input id="target" type="text" value="Field 1" /&gt;
  &lt;input type="text" value="Field 2" /&gt;
&lt;/form&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;
</pre>
         <p>The event handler can be bound to the first input field:</p>
         <pre>$('#target').focus(function() {
  alert('Handler for .focus() called.');
});</pre>
         <p>Now if we click on the first field, or tab to it from another field, the alert is displayed:</p>
         
         <p>
            <span class="output">Handler for .focus() called.</span>
            
         </p>
         
         <p>We can trigger the event when another element is clicked:</p>
         <pre>$('#other').click(function() {
  $('#target').focus();
});</pre>
         <p>After this code executes, clicks on <span class="output">Trigger the handler</span> will also alert the message.
         </p>
         
         <p>The <code>focus</code> event does not bubble in Internet Explorer. Therefore, scripts that rely on event delegation with the <code>focus</code> event will not work consistently across browsers.
         </p>
         
         <blockquote>
            
            <p>Triggering the focus on hidden elements causes an error in Internet Explorer. Take care to only call <code>.focus()</code> without parameters on elements that are visible.
            </p>
            
         </blockquote>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Fire focus.</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;span {display:none;}&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;&lt;input type="text" /&gt; &lt;span&gt;focus fire&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;input type="password" /&gt; &lt;span&gt;focus fire&lt;/span&gt;&lt;/p&gt;

&lt;script&gt;


    $("input").focus(function () {
         $(this).next("span").css('display','inline').fadeOut(1000);
    });


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h5>演示:</h5><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>To stop people from writing in text input boxes, try:</p>
      <h5>jQuery 代码:</h5><pre><code>$("input[type=text]").focus(function(){
  $(this).blur();
});</code></pre><h3>示例:</h3>
      <p>To focus on a login input box with id 'login' on page startup, try:</p>
      <h5>jQuery 代码:</h5><pre><code>$(document).ready(function(){
  $("#login").focus();
});</code></pre></div>
</div>