<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div class="entry">
   <h2><span>返回值:jQuery</span>mouseout(handler(eventObject))<br></h2>
   <div class="desc">
      <p>Bind an event handler to the "mouseout" JavaScript event, or trigger that event on an element.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>mouseout(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>mouseout(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>mouseout()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>This method is a shortcut for <code>.bind('mouseout', handler)</code> in the first variation, and <code>.trigger('mouseout')</code> in the second.
         </p>
         
         <p>The <code>mouseout</code> event is sent to an element when the mouse pointer leaves the element. Any HTML element can receive this event.
         </p>
         
         <p>For example, consider the HTML:</p>
         <pre>&lt;div id="outer"&gt;
  Outer
  &lt;div id="inner"&gt;
    Inner
  &lt;/div&gt;
&lt;/div&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;
&lt;div id="log"&gt;&lt;/div&gt;</pre> 
         <p class="image">
            <img src="images/0042_05_07.png" alt="">
            
         </p>
         
         <p>The event handler can be bound to any element:</p>
         <pre>$('#outer').mouseout(function() {
  $('#log').append('Handler for .mouseout() called.');
});</pre>
         <p>Now when the mouse pointer moves out of the <span class="output">Outer</span> 
            <code>&lt;div&gt;</code>, the message is appended to <code>&lt;div id="log"&gt;</code>. We can also trigger the event when another element is clicked:
         </p>
         <pre>$('#other').click(function() {
  $('#outer').mouseout();
});</pre>
         <p>After this code executes, clicks on <span class="output">Trigger the handler</span> will also append the message.
         </p>
         
         <p>This event type can cause many headaches due to event bubbling. For instance, when the mouse pointer moves out of the <span class="output">Inner</span> element in this example, a <code>mouseout</code> event will be sent to that, then trickle up to <span class="output">Outer</span>. This can trigger the bound <code>mouseout</code> handler at inopportune times. See the discussion for <code>.<a href="mouseleave.htm">mouseleave</a>()</code> for a useful alternative.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Show the number of times mouseout and mouseleave events are triggered.
         mouseout fires when the pointer moves out of the child element as well, while mouseleave fires only when the pointer moves
         out of the bound element.
      </p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
div.out {
width:40%;
height:120px;
margin:0 15px;
background-color:#D6EDFC;
float:left;
}
div.in {
width:60%;
height:60%;
background-color:#FFCC00;
margin:10px auto;
}
p {
line-height:1em;
margin:0;
padding:0;
}
&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;div class="out overout"&gt;&lt;p&gt;move your mouse&lt;/p&gt;&lt;div class="in overout"&gt;&lt;p&gt;move your mouse&lt;/p&gt;&lt;p&gt;0&lt;/p&gt;&lt;/div&gt;&lt;p&gt;0&lt;/p&gt;&lt;/div&gt;

&lt;div class="out enterleave"&gt;&lt;p&gt;move your mouse&lt;/p&gt;&lt;div class="in enterleave"&gt;&lt;p&gt;move your mouse&lt;/p&gt;&lt;p&gt;0&lt;/p&gt;&lt;/div&gt;&lt;p&gt;0&lt;/p&gt;&lt;/div&gt;



&lt;script&gt;


    var i = 0;
    $("div.overout").mouseout(function(){
      $("p:first",this).text("mouse out");
      $("p:last",this).text(++i);
    }).mouseover(function(){
      $("p:first",this).text("mouse over");
    });

    var n = 0;
    $("div.enterleave").bind("mouseenter",function(){
      $("p:first",this).text("mouse enter");
    }).bind("mouseleave",function(){
      $("p:first",this).text("mouse leave");
      $("p:last",this).text(++n);
    });



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h5>演示:</h5><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>