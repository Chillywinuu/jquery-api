<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div class="entry">
   <h2><span>返回值:jQuery</span>after(content)<br></h2>
   <div class="desc">
      <p>Insert content, specified by the parameter, after each element in the set of matched elements.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>after(content)
               								
            </h4>
            <div class="arguement"><strong>content</strong>
               								(String, Element, jQuery)
               								An element, HTML string, or jQuery object to insert after each element in the set of matched elements.
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>after(function(index))
               								
            </h4>
            <div class="arguement"><strong>function(index)</strong>
               								(Function)
               								A function that returns an HTML string to insert after each element in the set of matched elements.
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>The <code>.after()</code> and <code><a href="insertAfter.htm">.insertAfter()</a></code> methods perform the same task. The major difference is in the syntax—specifically, in the placement of the content and target.
            With<code> .after()</code>, the selector expression preceding the method is the container after which the content is inserted. With <code>.insertAfter()</code>, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and
            it is inserted after the target container.
         </p>
         
         <p>Consider the following HTML:</p>
         <pre>&lt;div class="container"&gt;
  &lt;h2&gt;Greetings&lt;/h2&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;</pre>
         <p>We can create content and insert it after several elements at once:</p>
         <pre>$('.inner').after('&lt;p&gt;Test&lt;/p&gt;');</pre>
         <p>Each inner <code>&lt;div&gt;</code> element gets this new content:
         </p>
         <pre>&lt;div class="container"&gt;
  &lt;h2&gt;Greetings&lt;/h2&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;p&gt;Test&lt;/p&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
  &lt;p&gt;Test&lt;/p&gt;
&lt;/div&gt;</pre>
         <p>We can also select an element on the page and insert it after another:</p>
         <pre>$('.container').after($('h2'));</pre>
         <p>If an element selected this way is inserted elsewhere, it will be moved after the target (not cloned):</p>
         <pre>&lt;div class="container"&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Greetings&lt;/h2&gt;</pre>
         <p>If there is more than one target element, however, cloned copies of the inserted element will be created for each target after
            the first.
         </p>
         
         <h4 id="disconnected-dom-nodes">Inserting Disconnected DOM nodes</h4>
         
         <p>As of jQuery 1.4, <code>.before()</code> and <code>.after()</code> will also work on disconnected DOM nodes. For example, given the following code:
         </p>
         <pre>$('&lt;div/&gt;').after('&lt;p&gt;&lt;/p&gt;');</pre>
         <p>The result is a jQuery set containing a div and a paragraph, in that order. We can further manipulate that set, even before
            inserting it in the document.
         </p>
         <pre>$('&lt;div/&gt;').after('&lt;p&gt;&lt;/p&gt;').addClass('foo')
  .filter('p').attr('id', 'bar').html('hello')
.end()
.appendTo('body');</pre>
         <p>This results in the following elements inserted just before the closing <code>&lt;/body&gt;</code> tag:
         </p>
         <pre>
&lt;div class="foo"&gt;&lt;/div&gt;
&lt;p class="foo" id="bar"&gt;hello&lt;/p&gt;
</pre>
         <p>As of jQuery 1.4, <code>.after()</code> allows us to pass a function that returns the elements to insert.
         </p>
         <pre>$('p').after(function() {
  return '&lt;div&gt;' + this.className + '&lt;/div&gt;';
});</pre>
         <p>This inserts a <code>&lt;div&gt;</code> after each paragraph, containing the class name(s) of each paragraph in turn.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Inserts some HTML after all paragraphs.</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;p { background:yellow; }&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;I would like to say: &lt;/p&gt;

&lt;script&gt;

$("p").after("&lt;b&gt;Hello&lt;/b&gt;");

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h5>演示:</h5><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>Inserts a DOM element after all paragraphs.</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;p { background:yellow; }&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;I would like to say: &lt;/p&gt;

&lt;script&gt;

$("p").after( document.createTextNode("Hello") );

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h5>演示:</h5><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>Inserts a jQuery object (similar to an Array of DOM Elements) after all paragraphs.</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;p { background:yellow; }&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;

&lt;script&gt;

$("p").after( $("b") );

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h5>演示:</h5><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>